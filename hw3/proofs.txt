//axioms 1-9 and hypothesis

a
(a -> (!a -> a))
(!a -> a)
(!a -> (!a -> !a))
((!a -> (!a -> !a)) -> ((!a -> ((!a -> !a) -> !a)) -> (!a -> !a)))
((!a -> ((!a -> !a) -> !a)) -> (!a -> !a))
(!a -> ((!a -> !a) -> !a))
(!a -> !a)
((!a -> a) -> ((!a -> !a) -> !!a))
((!a -> !a) -> !!a)
!!a

Code:

  putStrLn $ show a
  putStrLn $ show (Bin Impl a (Bin Impl (Not a) a))
  putStrLn $ show (Bin Impl (Not a) a)
  putStrLn $ show (Bin Impl (Not a) (Bin Impl (Not a) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Bin Impl (Not a) (Not a))) (Bin Impl (Bin Impl (Not a) (Bin Impl (Bin Impl (Not a) (Not a)) (Not a))) (Bin Impl (Not a) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Bin Impl (Bin Impl (Not a) (Not a)) (Not a))) (Bin Impl (Not a) (Not a)))
  putStrLn $ show (Bin Impl (Not a) (Bin Impl (Bin Impl (Not a) (Not a)) (Not a)))
  putStrLn $ show (Bin Impl (Not a) (Not a))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) a) (Bin Impl (Bin Impl (Not a) (Not a)) (Not (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Not a)) (Not (Not a)))
  putStrLn $ show (Not (Not a))




//axiom 10 

(a->(!!a->a)) 
((a->(!!a->a))->(!(!!a->a)->(a->(!!a->a)))) 
(!(!!a->a)->(a->(!!a->a))) 
(!(!!a->a)->(a->!(!!a->a))) 
(!(!!a->a)->(!(!!a->a)->!(!!a->a))) 
(!(!!a->a)->((!(!!a->a)->!(!!a->a))->!(!!a->a))) 
((!(!!a->a)->(!(!!a->a)->!(!!a->a)))->((!(!!a->a)->((!(!!a->a)->!(!!a->a))->!(!!a->a)))->(!(!!a->a)->!(!!a->a)))) 
((!(!!a->a)->((!(!!a->a)->!(!!a->a))->!(!!a->a)))->(!(!!a->a)->!(!!a->a))) 
(!(!!a->a)->!(!!a->a)) 
((a->(!!a->a))->((a->!(!!a->a))->!a)) 
(((a->(!!a->a))->((a->!(!!a->a))->!a))->(!(!!a->a)->((a->(!!a->a))->((a->!(!!a->a))->!a)))) 
(!(!!a->a)->((a->(!!a->a))->((a->!(!!a->a))->!a))) 
((!(!!a->a)->(a->(!!a->a)))->((!(!!a->a)->((a->(!!a->a))->((a->!(!!a->a))->!a)))->(!(!!a->a)->((a->!(!!a->a))->!a)))) 
((!(!!a->a)->((a->(!!a->a))->((a->!(!!a->a))->!a)))->(!(!!a->a)->((a->!(!!a->a))->!a))) 
(!(!!a->a)->((a->!(!!a->a))->!a)) 
((!(!!a->a)->(a->!(!!a->a)))->((!(!!a->a)->((a->!(!!a->a))->!a))->(!(!!a->a)->!a))) 
((!(!!a->a)->((a->!(!!a->a))->!a))->(!(!!a->a)->!a))
(!(!!a->a)->!a)
(!a->(!!a->a)) 
((!a->(!!a->a))->(!(!!a->a)->(!a->(!!a->a)))) 
 (!(!!a->a)->(!a->(!!a->a))) 
 ((!(!!a->a)->!a)->((!(!!a->a)->(!a->(!!a->a)))->(!(!!a->a)->(!!a->a)))) 
((!(!!a->a)->(!a->(!!a->a)))->(!(!!a->a)->(!!a->a))) 
 (!(!!a->a)->(!!a->a)) 
((!(!!a->a)->(!!a->a))->((!(!!a->a)->!(!!a->a))->!!(!!a->a))) 
((!(!!a->a)->!(!!a->a))->!!(!!a->a)) 
!!(!!a->a)

Code:

  putStrLn $ show (Bin Impl a (Bin Impl (Not (Not a)) a))
  putStrLn $ show (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl a (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl a (Bin Impl (Not (Not a)) a)))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl a (Not (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))) (Not (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a)))) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))) (Not (Bin Impl (Not (Not a)) a)))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))) (Not (Bin Impl (Not (Not a)) a)))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a)))
  putStrLn $ show (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl a (Bin Impl (Not (Not a)) a))) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl a (Not (Bin Impl (Not (Not a)) a)))) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl a (Not (Bin Impl (Not (Not a)) a))) (Not a))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not a)))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not a))
  putStrLn $ show (Bin Impl (Not a) (Bin Impl (Not (Not a)) a))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not a) (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not a) (Bin Impl (Not (Not a)) a)))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not a)) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not a) (Bin Impl (Not (Not a)) a))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not a) (Bin Impl (Not (Not a)) a))) (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Not a)) a)))
  putStrLn $ show (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Not a)) a))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Bin Impl (Not (Not a)) a)) (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))) (Not (Not (Bin Impl (Not (Not a)) a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl (Not (Not a)) a)) (Not (Bin Impl (Not (Not a)) a))) (Not (Not (Bin Impl (Not (Not a)) a))))
  putStrLn $ show (Not (Not (Bin Impl (Not (Not a)) a)))


// Modus Ponens

(!b->((a->b)->!b)) 
(!b->(a->!b)) 
((!b->(a->!b))->(!b->(!b->(a->!b)))) 
(!b->(!b->(a->!b))) 
((!b->(a->!b))->((a->b)->(!b->(a->!b)))) 
(((!b->(a->!b))->((a->b)->(!b->(a->!b))))->(!b->((!b->(a->!b))->((a->b)->(!b->(a->!b)))))) 
(!b->((!b->(a->!b))->((a->b)->(!b->(a->!b))))) 
((!b->(!b->(a->!b)))->((!b->((!b->(a->!b))->((a->b)->(!b->(a->!b)))))->(!b->((a->b)->(!b->(a->!b)))))) 
((!b->((!b->(a->!b))->((a->b)->(!b->(a->!b)))))->(!b->((a->b)->(!b->(a->!b))))) 
(!b->((a->b)->(!b->(a->!b)))) 
(((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))) 
((((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b))))->(!b->(((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))))) 
(!b->(((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b))))) 
((!b->((a->b)->!b))->((!b->(((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))))->(!b->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))))) 
((!b->(((a->b)->!b)->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))))->(!b->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b))))) 
(!b->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b)))) 
((!b->((a->b)->(!b->(a->!b))))->((!b->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b))))->(!b->((a->b)->(a->!b))))) 
((!b->(((a->b)->(!b->(a->!b)))->((a->b)->(a->!b))))->(!b->((a->b)->(a->!b)))) 
(!b->((a->b)->(a->!b))) 
((a->b)->((a->!b)->!a)) 
(((a->b)->((a->!b)->!a))->(!b->((a->b)->((a->!b)->!a)))) 
(!b->((a->b)->((a->!b)->!a))) 
(((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a))) 
((((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a)))->(!b->(((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a))))) 
(!b->(((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a)))) 
((!b->((a->b)->(a->!b)))->((!b->(((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a))))->(!b->(((a->b)->((a->!b)->!a))->((a->b)->!a))))) 
((!b->(((a->b)->(a->!b))->(((a->b)->((a->!b)->!a))->((a->b)->!a))))->(!b->(((a->b)->((a->!b)->!a))->((a->b)->!a)))) 
(!b->(((a->b)->((a->!b)->!a))->((a->b)->!a))) 
((!b->((a->b)->((a->!b)->!a)))->((!b->(((a->b)->((a->!b)->!a))->((a->b)->!a)))->(!b->((a->b)->!a)))) 
((!b->(((a->b)->((a->!b)->!a))->((a->b)->!a)))->(!b->((a->b)->!a))) 
(!b->((a->b)->!a)) 
!!a 
(!!a->(!b->!!a)) 
(!b->!!a) 
(!!a->((a->b)->!!a)) 
((!!a->((a->b)->!!a))->(!b->(!!a->((a->b)->!!a)))) 
(!b->(!!a->((a->b)->!!a))) 
((!b->!!a)->((!b->(!!a->((a->b)->!!a)))->(!b->((a->b)->!!a)))) 
((!b->(!!a->((a->b)->!!a)))->(!b->((a->b)->!!a))) 
(!b->((a->b)->!!a)) 
(!a->(!!a->!(a->b))) 
((!a->(!!a->!(a->b)))->(!b->(!a->(!!a->!(a->b))))) 
(!b->(!a->(!!a->!(a->b)))) 
((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b))))) 
(((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b)))))->(!b->((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b))))))) 
(!b->((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b)))))) 
((!b->(!a->(!!a->!(a->b))))->((!b->((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b))))))->(!b->((a->b)->(!a->(!!a->!(a->b))))))) 
((!b->((!a->(!!a->!(a->b)))->((a->b)->(!a->(!!a->!(a->b))))))->(!b->((a->b)->(!a->(!!a->!(a->b)))))) 
(!b->((a->b)->(!a->(!!a->!(a->b))))) 
(((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))) 
((((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b)))))->(!b->(((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))))) 
(!b->(((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b)))))) 
((!b->((a->b)->!a))->((!b->(((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))))->(!b->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))))) 
((!b->(((a->b)->!a)->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))))->(!b->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b)))))) 
(!b->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b))))) 
((!b->((a->b)->(!a->(!!a->!(a->b)))))->((!b->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b)))))->(!b->((a->b)->(!!a->!(a->b)))))) 
((!b->(((a->b)->(!a->(!!a->!(a->b))))->((a->b)->(!!a->!(a->b)))))->(!b->((a->b)->(!!a->!(a->b))))) 
(!b->((a->b)->(!!a->!(a->b)))) 
(((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))) 
((((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b))))->(!b->(((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))))) 
(!b->(((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b))))) 
((!b->((a->b)->!!a))->((!b->(((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))))->(!b->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))))) 
((!b->(((a->b)->!!a)->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))))->(!b->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b))))) 
(!b->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b)))) 
((!b->((a->b)->(!!a->!(a->b))))->((!b->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b))))->(!b->((a->b)->!(a->b))))) 
((!b->(((a->b)->(!!a->!(a->b)))->((a->b)->!(a->b))))->(!b->((a->b)->!(a->b)))) 
(!b->((a->b)->!(a->b))) 
!!(a->b) 
(!!(a->b)->(!b->!!(a->b))) 
(!b->!!(a->b)) 
(!!(a->b)->((a->b)->!!(a->b))) 
((!!(a->b)->((a->b)->!!(a->b)))->(!b->(!!(a->b)->((a->b)->!!(a->b))))) 
(!b->(!!(a->b)->((a->b)->!!(a->b)))) 
((!b->!!(a->b))->((!b->(!!(a->b)->((a->b)->!!(a->b))))->(!b->((a->b)->!!(a->b))))) 
((!b->(!!(a->b)->((a->b)->!!(a->b))))->(!b->((a->b)->!!(a->b)))) 
(!b->((a->b)->!!(a->b))) 
(((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b))) 
((((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b)))->(!b->(((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b))))) 
(!b->(((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b)))) 
((!b->((a->b)->!(a->b)))->((!b->(((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b))))->(!b->(((a->b)->!!(a->b))->!(a->b))))) 
((!b->(((a->b)->!(a->b))->(((a->b)->!!(a->b))->!(a->b))))->(!b->(((a->b)->!!(a->b))->!(a->b)))) 
(!b->(((a->b)->!!(a->b))->!(a->b))) 
((!b->((a->b)->!!(a->b)))->((!b->(((a->b)->!!(a->b))->!(a->b)))->(!b->!(a->b)))) 
((!b->(((a->b)->!!(a->b))->!(a->b)))->(!b->!(a->b))) 
(!b->!(a->b)) 
(!(a->b)->(!!(a->b)->!a)) 
((!(a->b)->(!!(a->b)->!a))->(!b->(!(a->b)->(!!(a->b)->!a)))) 
(!b->(!(a->b)->(!!(a->b)->!a))) 
((!b->!(a->b))->((!b->(!(a->b)->(!!(a->b)->!a)))->(!b->(!!(a->b)->!a)))) 
((!b->(!(a->b)->(!!(a->b)->!a)))->(!b->(!!(a->b)->!a))) 
(!b->(!!(a->b)->!a)) 
((!b->!!(a->b))->((!b->(!!(a->b)->!a))->(!b->!a))) 
((!b->(!!(a->b)->!a))->(!b->!a)) 
(!b->!a) 
((!b->!a)->((!b->!!a)->!!b)) 
((!b->!!a)->!!b) 
!!b
Code:

  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not b)))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl a (Not b)))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Not b) (Bin Impl (Not b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not b) (Bin Impl a (Not b))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Not b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not b))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not b)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b))))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))))
  putStrLn $ show (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a)))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl a (Not b)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl a (Not b))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a)))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Bin Impl a (Not b)) (Not a))) (Bin Impl (Bin Impl a b) (Not a)))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not a))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not a)))
  putStrLn $ show (Not (Not a))
  putStrLn $ show (Bin Impl (Not (Not a)) (Bin Impl (Not b) (Not (Not a))))
  putStrLn $ show (Bin Impl (Not b) (Not (Not a)))
  putStrLn $ show (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a)))) (Bin Impl (Not b) (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not (Not a))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not a))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not a)) (Bin Impl (Bin Impl a b) (Not (Not a))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not a)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not a))))
  putStrLn $ show (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Not b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not a))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not a)) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not a) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not a)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not a))) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b))))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Bin Impl (Not (Not a)) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))))
  putStrLn $ show (Not (Not (Bin Impl a b)))
  putStrLn $ show (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Not b) (Not (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Not b) (Not (Not (Bin Impl a b))))
  putStrLn $ show (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not (Not (Bin Impl a b)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))) (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))
  putStrLn $ show (Bin Impl (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b)))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Bin Impl a b)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))) (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b))))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b)))) (Bin Impl (Not b) (Not (Bin Impl a b)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Bin Impl (Bin Impl a b) (Not (Not (Bin Impl a b)))) (Not (Bin Impl a b)))) (Bin Impl (Not b) (Not (Bin Impl a b))))
  putStrLn $ show (Bin Impl (Not b) (Not (Bin Impl a b)))
  putStrLn $ show (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a))) (Bin Impl (Not b) (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not (Bin Impl a b))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))) (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Bin Impl a b)) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))) (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Not a))))
  putStrLn $ show (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Not a)))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not (Not (Bin Impl a b)))) (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Not a))) (Bin Impl (Not b) (Not a))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Bin Impl (Not (Not (Bin Impl a b))) (Not a))) (Bin Impl (Not b) (Not a)))
  putStrLn $ show (Bin Impl (Not b) (Not a))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not a)) (Bin Impl (Bin Impl (Not b) (Not (Not a))) (Not (Not b))))
  putStrLn $ show (Bin Impl (Bin Impl (Not b) (Not (Not a))) (Not (Not b)))
  putStrLn $ show (Not (Not b))